{
  "openapi": "3.0.1",
  "info": {
    "title": "Library Management System",
    "version": "1.0.0",
    "description": "API Library Managment System",
    "author": "Israel MANZI"
  },
  "servers": [
    {
      "url": "http://{hostname}/api/v1",
      "variables": {
        "hostname": {
          "default": "localhost:4000",
          "description": "API server hostname"
        }
      }
    }
  ],
  "paths": {
    "/healthcheck": {
      "get": {
        "tags": ["Healthcheck"],
        "summary": "Check API Health",
        "description": "This endpoint is used to test the API's health.",
        "responses": {
          "200": {
            "description": "Successful health check",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthcheckResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable"
          }
        }
      }
    },
    "/auth/generate-auth-token": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login",
        "description": "Endpoint to login and generate an authentication token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, token generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register User",
        "description": "Endpoint to register a new user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/login-info": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get Auth Info",
        "description": "Endpoint to get authentication information using a token.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication info retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": ["Books"],
        "summary": "Get all books",
        "description": "Retrieve a list of all books.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books/register": {
      "post": {
        "tags": ["Books"],
        "summary": "Create a book",
        "description": "Add a new book to the library.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/books/{bookId}": {
      "get": {
        "tags": ["Books"],
        "summary": "Get a book",
        "description": "Retrieve a book by its ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the book to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Book details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Authorization token"
      }
    },
    "schemas": {
      "HealthcheckResponse": {
        "type": "object",
        "properties": {
          "uptime": {
            "type": "number",
            "format": "float",
            "description": "Time in seconds since the server started",
            "example": 12345.6789
          },
          "responseTime": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "integer",
              "description": "High resolution time in [seconds, nanoseconds]"
            },
            "description": "High resolution response time",
            "example": [12345, 67890]
          },
          "message": {
            "type": "string",
            "description": "Health check message",
            "example": "OK"
          },
          "timestamp": {
            "type": "number",
            "format": "int64",
            "description": "Current timestamp in milliseconds",
            "example": 1625247600000
          }
        },
        "required": ["uptime", "responseTime", "message", "timestamp"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password",
            "example": "password123"
          }
        },
        "required": ["email", "password"]
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "user@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name",
            "example": "Doe"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name",
            "example": "John"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password",
            "example": "password123"
          }
        },
        "required": ["email", "name", "password"]
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID",
            "example": "60d0fe4f5311236168a109ca"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "user@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name",
            "example": "Doe"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name",
            "example": "John"
          }
        }
      },
      "AuthInfoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User ID",
            "example": "60d0fe4f5311236168a109ca"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "User's full name",
            "example": "John Doe"
          }
        }
      },
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Book ID",
            "example": "60d0fe4f5311236168a109cb"
          },
          "name": {
            "type": "string",
            "description": "Name of the book",
            "example": "To Kill a Mockingbird"
          },
          "author": {
            "type": "string",
            "description": "Author of the book",
            "example": "Harper Lee"
          },
          "publisher": {
            "type": "string",
            "description": "Publisher of the book",
            "example": "J.B. Lippincott & Co."
          },
          "publicationYear": {
            "type": "string",
            "description": "Year when the book was published",
            "example": "1960"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the book",
            "example": "Fiction"
          }
        },
        "required": [
          "name",
          "author",
          "publisher",
          "publicationYear",
          "subject"
        ]
      },
      "BookRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the book",
            "example": "To Kill a Mockingbird"
          },
          "author": {
            "type": "string",
            "description": "Author of the book",
            "example": "Harper Lee"
          },
          "publisher": {
            "type": "string",
            "description": "Publisher of the book",
            "example": "J.B. Lippincott & Co."
          },
          "publicationYear": {
            "type": "string",
            "description": "Year when the book was published",
            "example": "1960"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the book",
            "example": "Fiction"
          }
        },
        "required": [
          "name",
          "author",
          "publisher",
          "publicationYear",
          "subject"
        ]
      }
    }
  }
}
